/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/3b1fe1f1-1561-4549-a566-d9f199e33505 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudTemperatureSensor temperatura;
  CloudRelativeHumidity humedad;
  bool led;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
//Agrego la librería que permite utilizar el sensor DHT11
//IMPORTANTE, se deben crear dos varibles en ArduinoCloud con el objetivo de ser conectadas con la temperatura 
//y la humedad, pueden ser del tipo Temperatura y Humedad relativa (o variables float), la idea es que sean sólo
//de lectura y que se actualicen cada cierto tiempo (ejemplo, 15 segundos).
#include "DHT.h"

//El sensor DHT11 se conecta de la siguiente forma a WeMos
// GND a un GND en WeMos
// Data al puerto D2 en Wemos (que en realidad es el D4 en el programa)
// Vcc a un puerto 5V en Wemos

//Configuro las variables que permiten el uso del pin D4 (que es D2 en Wemos) y del sensor DHT11
#define DHTpin D4 // D4 on the nodemcu ESP8266
#define DHTTYPE DHT11

//Defino la variable DHT para poder trabajar
DHT dht(DHTpin,DHTTYPE);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  //Configuro de salida el led en la placa para poder encenderla y apagarla con un control de arduino cloud
  pinMode(LED_BUILTIN, OUTPUT);

}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  //Configuro un retardo para poder mostrar la información
  delay(2000);
  //Llamo al método que se encargará de publicar la información en el puerto serial y lo asigno a las variables temperatura y humedad
  dht_sensor_getdata();
}
/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLedChange()  {
  // Add your code here to act upon Led change
  //NOTA: Funciona al revés
    Serial.print("La luz está  ");
    if (led == true) {
        digitalWrite(LED_BUILTIN, HIGH);
        Serial.println("Encedida");
    } else {
        digitalWrite(LED_BUILTIN, LOW);
        Serial.println("Apagada");
    }
}
//Método que permite obtener la información del sensor DHT11
void dht_sensor_getdata()
{
  //Asigno los valores leídos a las variables
  float temperatura =dht.readTemperature();
  float humedad= dht.readHumidity();
  //Muestro por serial los resultados
  Serial.println("Temperatura = " + String(temperatura)+"  Humedad = " + String(humedad));
}
